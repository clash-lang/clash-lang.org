/* AUTOMATICALLY GENERATED SYSTEMVERILOG-2005 SOURCE CODE.
** GENERATED BY CLASH 1.8.2. DO NOT MODIFY.
*/
`default_nettype none
`timescale 100fs/100fs
module topEntity
    ( // Inputs
      input wire logic clk  // clock
    , input wire logic rst  // reset

      // Outputs
    , output logic result
    );
  // ShortBlinker.hs:21:1-9
  ShortBlinker_topEntity_types::Tuple2 c$counter_case_scrut;
  // ShortBlinker.hs:21:1-9
  logic [0:0] a2;
  // ShortBlinker.hs:21:1-9
  ShortBlinker_topEntity_types::Tuple2_0 counter = {1'b0,25'd0};
  // ShortBlinker.hs:21:1-9
  ShortBlinker_topEntity_types::Tuple2_0 c$counter_case_alt;
  // ShortBlinker.hs:21:1-9
  logic overflowB;
  // ShortBlinker.hs:21:1-9
  logic [24:0] b1;
  // ShortBlinker.hs:21:1-9
  ShortBlinker_topEntity_types::Tuple2_1 c$counter_case_scrut_0;
  // ShortBlinker.hs:21:1-9
  logic [24:0] b0;

  assign result = (a2);

  assign c$counter_case_scrut = (a2 == 1'b1) ? {1'b1
                                               ,1'd0} : {1'b0,a2 + 1'b1};

  assign a2 = counter.Tuple2_0_sel0;

  // register begin
  always_ff @(posedge clk ) begin : counter_register
    if ( rst) begin
      counter <= {1'b0,25'd0};
    end else   begin
      counter <= c$counter_case_alt;
    end
  end
  // register end

  assign c$counter_case_alt = overflowB ? {c$counter_case_scrut.Tuple2_sel1
                                          ,b1} : {a2,b1};

  assign overflowB = c$counter_case_scrut_0.Tuple2_1_sel0;

  assign b1 = c$counter_case_scrut_0.Tuple2_1_sel1;

  assign c$counter_case_scrut_0 = (b0 == 25'd24999999) ? {1'b1
                                                         ,25'd0} : {1'b0,b0 + 25'd1};

  assign b0 = counter.Tuple2_0_sel1;


endmodule

